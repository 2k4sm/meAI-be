"""removes tool-call.

Revision ID: 82f1963d86d1
Revises: 3845090daa59
Create Date: 2025-07-20 05:35:10.539165

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '82f1963d86d1'
down_revision: Union[str, Sequence[str], None] = '3845090daa59'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tool_calls first since it depends on messages
    op.drop_index(op.f('ix_tool_calls_tool_call_id'), table_name='tool_calls')
    op.drop_table('tool_calls')
    
    # Now drop messages
    op.drop_index(op.f('ix_messages_message_id'), table_name='messages')
    op.drop_table('messages')
    
    # Drop conversations
    op.drop_index(op.f('ix_conversations_conversation_id'), table_name='conversations')
    op.drop_table('conversations')
    
    # Drop user_tool_preferences
    op.drop_index(op.f('ix_user_tool_preferences_preference_id'), table_name='user_tool_preferences')
    op.drop_table('user_tool_preferences')
    
    # Drop users last
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_refresh_token'), table_name='users')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tool_calls',
    sa.Column('tool_call_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tool_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('input_params', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('tool_response', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('executed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.message_id'], name=op.f('tool_calls_message_id_fkey')),
    sa.PrimaryKeyConstraint('tool_call_id', name=op.f('tool_calls_pkey'))
    )
    op.create_index(op.f('ix_tool_calls_tool_call_id'), 'tool_calls', ['tool_call_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('avatar_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('auth_method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_index(op.f('ix_users_refresh_token'), 'users', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('user_tool_preferences',
    sa.Column('preference_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('toolkit_slug', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('user_tool_preferences_user_id_fkey')),
    sa.PrimaryKeyConstraint('preference_id', name=op.f('user_tool_preferences_pkey'))
    )
    op.create_index(op.f('ix_user_tool_preferences_preference_id'), 'user_tool_preferences', ['preference_id'], unique=False)
    op.create_table('conversations',
    sa.Column('conversation_id', sa.INTEGER(), server_default=sa.text("nextval('conversations_conversation_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('summary_text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='conversations_user_id_fkey'),
    sa.PrimaryKeyConstraint('conversation_id', name='conversations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_conversations_conversation_id'), 'conversations', ['conversation_id'], unique=False)
    op.create_table('messages',
    sa.Column('message_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('conversation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('HUMAN', 'AI', 'SYSTEM', 'TOOL', name='messagetype'), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], name=op.f('messages_conversation_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('messages_user_id_fkey')),
    sa.PrimaryKeyConstraint('message_id', name=op.f('messages_pkey'))
    )
    op.create_index(op.f('ix_messages_message_id'), 'messages', ['message_id'], unique=False)
    # ### end Alembic commands ###
